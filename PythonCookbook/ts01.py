print("===========18===========".center(72))####################################################################
from random import randint
l_word = ["ศูนย์" ,"หนึ่ง", "สอง", "สาม", "สี่", "ห้า" ]
r = randint(0,10)
try: word = l_word[r]
except: print("Error เลขลำดับเกินขอบเขตของลิสต์")
else: print(f"{r} อ่านว่า {word}")
finally: print(f"เลขที่สุ่มได้คือ: {r}")
########################################################################
# def remove_list(lst, value):
#     #การลบสมาชิกของลิสต์ หากเราระบุสมาชิกที่ไม่มีอยู่ในลิสต์จะเกิดข้อผิดพลาด
#     #ดังนั้นจึงกำหนดขั้นตอบการลบไว้ในบล็อก try
#     #แต่ไม่ว่าการลบจะสำเร็จหรือไม่ ก็จะคืนค่าลิสต์ผลลัพธ์กลับออกไปเสมอ       *******************
#     try: lst.remove(value)
#     finally: return lst
#
# number_words = ["zero", "one", "two", "three", "four", "five"]
# a = remove_list(number_words,"ten")
# print(*a,sep=", ")
#
# a = remove_list(number_words, "one")
# print(*a,sep=", ")
print("########################################################################")
def remove_list(lst, value):
    try: lst.remove(value)   # แต่ไม่ว่าการลบจะสำเร็จหรือไม่ ก็จะคืนค่าลิสต์ผลลัพธ์กลับออกไปเสมอ
    finally: return lst # finally คือโค้ดที่ จะทำแน่นอน ไม่ว่าจะเกิดข้อผิดพลาดหรือไม่

l_word = ["zero","one","two","three","four","five"]
a = remove_list(l_word,"one")
print(*a,sep=", ")
# *a คือการ "แตกค่าทุกตัวในลิสต์ a อvอกมา" แล้วส่งต่อเข้า print() ทีละตัว โดยไม่ต้องใช้ลูปเอง

a = remove_list(l_word, " ") #.ใส่ try ไว้ไม่ว่ายังไงก็คืนค่า lst
print(*a,sep=", ")
print("===========19===========".center(72))####################################################################
# x = -1
# if x < 0: raise Exception("ข้อมูลเป็นจำนวนลบ") # raise เป็นการสั่งให้แสดงข้อผิดพลาด

